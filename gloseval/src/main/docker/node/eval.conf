## Node Mode
## Options are "headed" or "headless"
mode = ${MODE}

## TLS Settings
keypass = "keypassword"
storepass = "keystorepassword"
serverPort = ${SERVER_PORT}
serverSSLPort = ${SERVER_SSL_PORT}

## Node Admin Settings
nodeAdminEmail = "admin@localhost"
nodeAdminPass = "a"
nodeAdminName = "NodeAdmin QueenSplicious"

EmailAuthUsername = "juliatest38"
EmailAuthPassword = "juliatestjuliatest"
EmailFromAddress = "juliatest38@gmail.com"

## MongoDB Settings
dbHost = "127.0.0.1"
dbPort = "27017"

## Session Support
sessionTimeoutMinutes = 30  // number of minutes of no traffic to wait before invalidating sessionURI
pongTimeoutSeconds = 7  // number of seconds to wait on ping, before sending pong

## OmniRPC Settings
## Note: Port 18332 is for testnet only. Use port 8332 for mainnet, although this is definitely NOT RECOMMENDED (yet).
## Uncomment the following three lines to enable Omni Support:
# OmniRPCURI = "http://52.38.13.42:18332/"
# OmniRPCUser = "rpc"
# OmniRPCPass = "pass"

## Agent Settings
## Options are "distributed" or "colocated"
deploymentMode = ${DEPLOYMENT_MODE}

## Comm Link between GLoSEval and Diesel for DSL Evaluation
DSLCommLinkServerHost = ${DSL_COMM_LINK_SERVER_HOST}
DSLCommLinkServerPort = ${DSL_COMM_LINK_SERVER_PORT}
DSLCommLinkClientHosts = ${DSL_COMM_LINK_CLIENT_HOSTS}

## Diesel Settings for DSL Evaluation
DSLEvaluatorHost = ${DSL_EVALUATOR_HOST}
DSLEvaluatorPort = ${DSL_EVALUATOR_PORT}
DSLEvaluatorHostData = "/dieselProtocol"
DSLEvaluatorPreferredSupplierHost = ${DSL_EVALUATOR_PREFERRED_SUPPLIER_HOST}
DSLEvaluatorPreferredSupplierPort = ${DSL_EVALUATOR_PREFERRED_SUPPLIER_PORT}
DSLEvaluatorNetwork = { }

## Diesel Settings for BFactory Service
BFactoryCommLinkServerHost = ${BFACTORY_COMM_LINK_SERVER_HOST}
BFactoryCommLinkServerPort = ${BFACTORY_COMM_LINK_SERVER_PORT}
BFactoryCommLinkClientHost = ${BFACTORY_COMM_LINK_CLIENT_HOST}
BFactoryCommLinkClientPort = ${BFACTORY_COMM_LINK_CLIENT_PORT}
BFactoryEvaluatorHost = ${BFACTORY_EVALUATOR_HOST}
BFactoryEvaluatorPort = ${BFACTORY_EVALUATOR_PORT}
BFactoryEvaluatorHostData = "/bFactoryProtocol"
BFactoryMap = {
  introductionInitiator = { 
    cnxn = {
      src = "introductionCnxn"
      label = "initiation"
      trgt = "introductionCnxn"
    }
    label = "behaviors( introduction( initiator( true ), Alias ) )"
    class = "com.protegra_ati.agentservices.protocols.IntroductionInitiator"
    }
  introductionRecipient = { 
    cnxn = {
      src = "introductionCnxn"
      label = "receipt"
      trgt = "introductionCnxn"
    }
    label = "behaviors( introduction( recipient( true ), Cnxn ) )"
    class = "com.protegra_ati.agentservices.protocols.IntroductionRecipient"
    }     
  claimantBehavior = {
   cnxn = {
     src = "verifierProtocol"
      label = "verifierProtocol"
      trgt = "verifierProtocol"
   }   
   label = "claimant(true)"
   class = "com.protegra_ati.agentservices.protocols.ClaimantBehavior"
  }  
  verifierBehavior = {
    cnxn = {
      src = "verifierProtocol"
      label = "verifierProtocol"
      trgt = "verifierProtocol"
    }
    label = "verifier(true)"
    class = "com.protegra_ati.agentservices.protocols.VerifierBehavior"
  }
  relyingPartyBehavior = {
    cnxn = {
      src = "verifierProtocol"
      label = "verifierProtocol"
      trgt = "verifierProtocol"
    }
    label = "relyingParty(true)"
    class = "com.protegra_ati.agentservices.protocols.RelyingPartyBehavior"
  }
}

## Importer Settings
ImporterServiceHost = "127.0.0.1"
ImporterServicePort = 9876
ImporterServiceDemoDataFile = "src/main/resources/sample-data-demo.json"
